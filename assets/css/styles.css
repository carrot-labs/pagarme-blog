.cf,.clearfix,.navbar{*zoom:1;}.cf:before,.clearfix:before,.navbar:before,.cf:after,.clearfix:after,.navbar:after{content:'';display:table}.cf:after,.clearfix:after,.navbar:after{clear:both}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}html{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;-moz-box-sizing:inherit;box-sizing:inherit}html,body{height:100%;background:$grey-50;font-size:16px;font-family:"Titillium Web",Helvetica,Arial,sans-serif;color:rgba(0,0,0,0.87);text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-webkit-tap-highlight-color:rgba(0,0,0,0)}hr{margin-top:22px;margin-bottom:22px;margin-bottom:22px;border:0;border-top:1px solid $grey-300}.container,.navbar__inner,.chamada__inner,.topics,.post-thumb-list{*zoom:1;width:auto;max-width:95%;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0;}.container:before,.navbar__inner:before,.chamada__inner:before,.topics:before,.post-thumb-list:before,.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{content:'';display:table}.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{clear:both}@media only screen and (min-width:480px){.container,.navbar__inner,.chamada__inner,.topics,.post-thumb-list{*zoom:1;width:auto;max-width:90%;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0}.container:before,.navbar__inner:before,.chamada__inner:before,.topics:before,.post-thumb-list:before,.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{content:'';display:table}.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{clear:both}}@media only screen and (min-width:768px){.container,.navbar__inner,.chamada__inner,.topics,.post-thumb-list{*zoom:1;width:auto;max-width:90%;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0}.container:before,.navbar__inner:before,.chamada__inner:before,.topics:before,.post-thumb-list:before,.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{content:'';display:table}.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{clear:both}}@media only screen and (min-width:992px){.container,.navbar__inner,.chamada__inner,.topics,.post-thumb-list{*zoom:1;width:auto;max-width:780px;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0}.container:before,.navbar__inner:before,.chamada__inner:before,.topics:before,.post-thumb-list:before,.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{content:'';display:table}.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{clear:both}}@media only screen and (min-width:1170px){.container,.navbar__inner,.chamada__inner,.topics,.post-thumb-list{*zoom:1;width:auto;max-width:1140px;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0}.container:before,.navbar__inner:before,.chamada__inner:before,.topics:before,.post-thumb-list:before,.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{content:'';display:table}.container:after,.navbar__inner:after,.chamada__inner:after,.topics:after,.post-thumb-list:after{clear:both}}.navbar{width:100%;background:#484848;color:#a4a4a4;}.navbar__inner{padding-top:1.688rem;padding-bottom:1.688rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-webkit-align-items:center;-ms-align-items:center;align-items:center}.navbar__brand{text-transform:uppercase;font-style:italic;font-size:1.375rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-align-items:center;align-items:center;}.navbar__brand strong{margin-right:.3rem}.navbar__brand__logo{width:2.875rem;margin-right:1rem}.navbar__separator{width:.063rem;height:3.5rem;margin:0 2rem;background:rgba(0,0,0,0.49)}.navbar__menu ul{margin:0;padding:0;list-style:none}.navbar__menu li{display:inline-block;padding-right:1.3rem;}.navbar__menu li:last-child{padding-right:0}.navbar__menu a{text-decoration:none;color:#a4a4a4;font-size:1rem;-webkit-transition:all .4s cubic-bezier(.4,0,.2,1);transition:all .4s cubic-bezier(.4,0,.2,1);}.navbar__menu a:hover{color:#8b8b8b;-webkit-transition:all .4s cubic-bezier(.4,0,.2,1);transition:all .4s cubic-bezier(.4,0,.2,1)}.navbar__newsletter{margin-left:auto;font-size:1rem;}.navbar__newsletter input{width:280px;position:relative;left:4px;padding:.438rem 1.25rem;background:transparent;border:1px solid rgba(229,229,229,0.3);border-right-color:transparent;border-top-left-radius:.125rem;border-bottom-left-radius:.125rem;font-size:.938rem;line-height:1.428571429;}.navbar__newsletter input:focus{outline:0;-webkit-box-shadow:0 0 2px rgba(178,178,178,0.2);box-shadow:0 0 2px rgba(178,178,178,0.2);border-color:#b2b2b2}.navbar__newsletter button{padding:.531rem 1rem;background:transparent;border:1px solid #b2b2b2;border-radius:.125rem;text-transform:uppercase;font-size:.875rem;font-style:italic;font-weight:600;color:#fff;-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1);}.navbar__newsletter button:hover{background:#fff;border-color:#fff;color:rgba(0,0,0,0.87);-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1)}.navbar__newsletter button:focus{outline:0}.navbar__newsletter i{position:relative;left:4px}.chamada{width:100%;background:url("../img/chamada-background.png") no-repeat center center;background-size:cover;}.chamada__inner{padding:6.25rem 5.313rem}.chamada__category{font-size:1.063rem;font-style:italic;text-transform:uppercase;color:rgba(255,255,255,0.2)}.chamada__title{margin:0;line-height:2.875rem;font-size:2.813rem;font-weight:600;color:#fff}.chamada__read-more{padding:.313rem .625rem;display:inline-block;margin-top:15px;border:2px solid #ef6d00;border-radius:.375rem;line-height:1.063rem;font-size:1.063rem;font-style:italic;text-decoration:none;text-transform:uppercase;color:#ef6d00;-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1)}.topics{padding:1.875rem .625rem}.topics__list{list-style:none;margin:0}.topics__item,.topics__item--active{padding-right:.938rem;display:inline-block;font-weight:600;font-style:italic;font-size:.938rem;text-transform:uppercase;color:#9b9b9b;-webkit-transition:all .4s cubic-bezier(.4,0,.2,1);transition:all .4s cubic-bezier(.4,0,.2,1);}.topics__item:hover,.topics__item--active:hover{cursor:pointer;color:#000;-webkit-transition:all .4s cubic-bezier(.4,0,.2,1);transition:all .4s cubic-bezier(.4,0,.2,1)}.topics__item:last-child,.topics__item--active:last-child{padding-right:0}.topics__item--active{color:#000;-webkit-transition:all .4s cubic-bezier(.4,0,.2,1);transition:all .4s cubic-bezier(.4,0,.2,1)}.post-thumb,.post-thumb--tall{width:100%;height:265px;position:relative;overflow:hidden;background-position:50%;background-repeat:no-repeat;background-size:cover;-webkit-column-break-inside:avoid;-moz-column-break-inside:avoid;-o-column-break-inside:avoid;-ms-column-break-inside:avoid;column-break-inside:avoid;-webkit-backface-visibility:hidden;}.post-thumb:hover .post-thumb__info,.post-thumb--tall:hover .post-thumb__info{-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0}.post-thumb:hover .post-thumb__card,.post-thumb--tall:hover .post-thumb__card{-ms-filter:none;filter:none;opacity:1;z-index:90;-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1);-webkit-animation:bounceUpIn .4s cubic-bezier(.4,0,.2,1);animation:bounceUpIn .4s cubic-bezier(.4,0,.2,1)}.post-thumb--tall{height:530px}.post-thumb__image{-ms-filter:none;filter:none;opacity:1;z-index:10;background:#00f;}.post-thumb__image img{-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0;max-width:100%;width:100%;position:absolute;top:0;bottom:0;object-fit:cover}.post-thumb__info,.post-thumb__card__info{position:absolute;padding:.938rem 0 1.25rem 1.875rem;bottom:0;z-index:20;-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1)}.post-thumb__card{width:100%;height:100%;position:absolute;z-index:40;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0;font-size:.875rem;font-weight:300;color:#fff;-webkit-transition:all .28s cubic-bezier(.4,0,.2,1);transition:all .28s cubic-bezier(.4,0,.2,1);-webkit-animation:bounceUpOut .4s cubic-bezier(.4,0,.2,1);animation:bounceUpOut .4s cubic-bezier(.4,0,.2,1)}.post-thumb__category,.post-thumb__category--light{margin-bottom:.375rem;text-transform:uppercase;font-size:.75rem;font-style:italic;font-weight:700;color:#ef6d00}.post-thumb__category--light{color:#fff}.post-thumb__backdrop{width:100%;height:100%;position:absolute;background:#ef6d00;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";filter:alpha(opacity=80);opacity:.8;z-index:30}.post-thumb__card__info{padding-right:1.875rem;position:absolute;z-index:40}.post-thumb__card__description{width:100%;display:inline-block}.post-thumb__card__separator{width:100%;height:1px;background:rgba(255,255,255,0.2);margin:1.25rem 0}.post-thumb__card__read-more{padding:.938rem 1.875rem;position:absolute;z-index:40;right:0;font-size:1.063rem;font-style:italic;text-transform:uppercase;}.post-thumb__card__read-more i{margin-left:.313rem}.post-thumb__title,.post-thumb__title--block{width:-webkit-calc(80%);width:calc(80%);float:left;font-size:1.313rem;line-height:1.563rem;color:#fff}.post-thumb__title--block{float:none}.post-thumb__read-more{background:#f00;position:absolute;right:0;bottom:1.25rem;float:right;padding:.25rem .625rem;display:inline-block;background:#ef6d00;border-top-left-radius:7px;border-bottom-left-radius:7px;font-size:.75rem;font-style:italic;text-transform:uppercase;color:#fff}@-moz-keyframes bounceUpIn{0%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}60%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}80%{-webkit-transform:translateY(1%);-ms-transform:translateY(1%);transform:translateY(1%)}100%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}}@-webkit-keyframes bounceUpIn{0%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}60%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}80%{-webkit-transform:translateY(1%);-ms-transform:translateY(1%);transform:translateY(1%)}100%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}}@-o-keyframes bounceUpIn{0%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}60%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}80%{-webkit-transform:translateY(1%);-ms-transform:translateY(1%);transform:translateY(1%)}100%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}}@keyframes bounceUpIn{0%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}60%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}80%{-webkit-transform:translateY(1%);-ms-transform:translateY(1%);transform:translateY(1%)}100%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%)}}@-moz-keyframes bounceUpOut{0%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);-ms-filter:none;filter:none;opacity:1}80%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}100%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0}}@-webkit-keyframes bounceUpOut{0%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);-ms-filter:none;filter:none;opacity:1}80%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}100%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0}}@-o-keyframes bounceUpOut{0%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);-ms-filter:none;filter:none;opacity:1}80%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}100%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0}}@keyframes bounceUpOut{0%{-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);-ms-filter:none;filter:none;opacity:1}80%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}100%{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0}}.post-thumb-list{-webkit-column-count:1;-moz-column-count:1;column-count:1;-webkit-column-gap:0;-moz-column-gap:0;column-gap:0;}@media only screen and (min-width:768px){.post-thumb-list{-webkit-column-count:2;-moz-column-count:2;column-count:2}}@media only screen and (min-width:992px){.post-thumb-list{-webkit-column-count:3;-moz-column-count:3;column-count:3}}
/*# sourceMappingURL=data:application/json;base64, */